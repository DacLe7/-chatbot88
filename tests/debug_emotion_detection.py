#!/usr/bin/env python3
"""
Debug Emotion Detection
Ki·ªÉm tra chi ti·∫øt c√°c tr∆∞·ªùng h·ª£p b·ªã sai
"""

from ImprovedEmotionDetector import ImprovedEmotionDetector

def debug_specific_cases():
    """Debug c√°c tr∆∞·ªùng h·ª£p c·ª• th·ªÉ b·ªã sai"""
    detector = ImprovedEmotionDetector()
    
    print("üîç Debug Specific Cases")
    print("=" * 50)
    
    # Test "kh√¥ng bi·∫øt"
    print("\n1. Testing 'kh√¥ng bi·∫øt':")
    message = "kh√¥ng bi·∫øt"
    intent, intent_conf = detector.detect_intent(message)
    emotion, emotion_conf = detector.detect_emotion(message)
    result = detector.analyze_message(message)
    print(f"   Message: '{message}'")
    print(f"   Intent: {intent} ({intent_conf:.2f})")
    print(f"   Emotion: {emotion} ({emotion_conf:.2f})")
    print(f"   Result: {result}")
    
    # Test "stre..."
    print("\n2. Testing 'stre...':")
    message = "stre..."
    intent, intent_conf = detector.detect_intent(message)
    emotion, emotion_conf = detector.detect_emotion(message)
    result = detector.analyze_message(message)
    print(f"   Message: '{message}'")
    print(f"   Intent: {intent} ({intent_conf:.2f})")
    print(f"   Emotion: {emotion} ({emotion_conf:.2f})")
    print(f"   Result: {result}")
    
    # Test "v·∫≠y"
    print("\n3. Testing 'v·∫≠y':")
    message = "v·∫≠y"
    intent, intent_conf = detector.detect_intent(message)
    emotion, emotion_conf = detector.detect_emotion(message)
    result = detector.analyze_message(message)
    print(f"   Message: '{message}'")
    print(f"   Intent: {intent} ({intent_conf:.2f})")
    print(f"   Emotion: {emotion} ({emotion_conf:.2f})")
    print(f"   Result: {result}")
    
    # Test "t√¥i vui v√† mu·ªën ti·∫øp t·ª•c"
    print("\n4. Testing 't√¥i vui v√† mu·ªën ti·∫øp t·ª•c':")
    message = "t√¥i vui v√† mu·ªën ti·∫øp t·ª•c"
    intent, intent_conf = detector.detect_intent(message)
    emotion, emotion_conf = detector.detect_emotion(message)
    result = detector.analyze_message(message)
    print(f"   Message: '{message}'")
    print(f"   Intent: {intent} ({intent_conf:.2f})")
    print(f"   Emotion: {emotion} ({emotion_conf:.2f})")
    print(f"   Result: {result}")
    
    # Test "t√¥i vui"
    print("\n5. Testing 't√¥i vui':")
    message = "t√¥i vui"
    intent, intent_conf = detector.detect_intent(message)
    emotion, emotion_conf = detector.detect_emotion(message)
    result = detector.analyze_message(message)
    print(f"   Message: '{message}'")
    print(f"   Intent: {intent} ({intent_conf:.2f})")
    print(f"   Emotion: {emotion} ({emotion_conf:.2f})")
    print(f"   Result: {result}")
    
    # Test "t√¥i bu·ªìn"
    print("\n6. Testing 't√¥i bu·ªìn':")
    message = "t√¥i bu·ªìn"
    intent, intent_conf = detector.detect_intent(message)
    emotion, emotion_conf = detector.detect_emotion(message)
    result = detector.analyze_message(message)
    print(f"   Message: '{message}'")
    print(f"   Intent: {intent} ({intent_conf:.2f})")
    print(f"   Emotion: {emotion} ({emotion_conf:.2f})")
    print(f"   Result: {result}")
    
    # Test "t√¥i stress"
    print("\n7. Testing 't√¥i stress':")
    message = "t√¥i stress"
    intent, intent_conf = detector.detect_intent(message)
    emotion, emotion_conf = detector.detect_emotion(message)
    result = detector.analyze_message(message)
    print(f"   Message: '{message}'")
    print(f"   Intent: {intent} ({intent_conf:.2f})")
    print(f"   Emotion: {emotion} ({emotion_conf:.2f})")
    print(f"   Result: {result}")

if __name__ == "__main__":
    debug_specific_cases() 